heatmap((data.matrix(lang1)),Rowv=NA,Colv=NA)
lang1
clean.data.phono = clean.data[5:18]
heatmap((data.matrix(clean.data.phono)),Rowv=NA,Colv=NA)
heatmap(t(data.matrix(clean.data.phono)),Rowv=NA,Colv=NA)
heatmap((data.matrix(clean.data.phono)),Rowv=NA,Colv=NA)
heatmap((data.matrix(clean.data.phono)))
levels(clean.data$V1)
head(clean.data)
clean.data.phono = clean.data[5:18]
clean.data = read.table("data/geo-clean-30-datapoints-r-500",sep=",",header=F)
clean.data.phono = clean.data[5:18]
heatmap((data.matrix(clean.data.phono)),Rowv=NA,Colv=NA)
lang1 = clean.data[clean.data$V1=="yim",5:18]
heatmap((data.matrix(lang1)),Rowv=NA,Colv=NA)
lang2 = clean.data[clean.data$V1=="kob",5:18]#
heatmap((data.matrix(lang2)),Rowv=NA,Colv=NA)
lang3 = clean.data[clean.data$V1=="kew",5:18]#
heatmap((data.matrix(lang3)),Rowv=NA,Colv=NA)
lang4 = clean.data[clean.data$V1=="awt",5:18]#
heatmap((data.matrix(lang4)),Rowv=NA,Colv=NA)
lang5 = clean.data[clean.data$V1=="arp",5:18]#
heatmap((data.matrix(lang5)),Rowv=NA,Colv=NA)
lang6 = clean.data[clean.data$V1=="ala",5:18]#
heatmap((data.matrix(lang6)),Rowv=NA,Colv=NA)
setwd("/Users/rory/Documents/Research/Git/CoLitt/LingViz/code")
dir()
features = read.table("features.csv",header=T,sep=",")
names(features)
features[2,5]
features[5,2]
features = read.table("features.csv",header=T,sep=",",stringsAsFactors=F)
features[5,2]
shift = F
shift
if(shift){print("woo")}else{print("woah")}
shift = 1
if(shift){print("woo")}else{print("woah")}
get.feature = function(column,shift=F) {#
	if(shift) {#
		return(features[2,column-5])#
	}#
	return(features[2,column])#
}
get.feature(5)
get.feature(6)
features = read.table("features.csv",header=T,sep=",",stringsAsFactors=F)
get.feature = function(column,shift=F) {#
	if(shift) {#
		return(features[column-5,2])#
	}#
	return(features[column,2])#
}
get.feature(6)
get.feature(1)
get.feature(1:10)
lang1
lang1[is.na]
lang1[!is.na(lang1)]
lang1[!is.na(lang1),]
lang1[!is.na(lang1[,]),]
lang1[!is.na(lang1[:,]),]
lang1[,!is.na(lang1[,])]
lang1[,!is.na(lang1)]
lang1[!is.na(lang1),!is.na(lang1)]
lang1[!is.na(lang1),]
lang
lang1
is.na(lang1)
is.na(lang1[1,])
colMeans(lang1)
colMeans(is.na(lang1))
colMeans(is.na(lang1)) < 1
which(colMeans(is.na(lang1)) < 1)
lang1[,which(colMeans(is.na(lang1)) < 1)]
lang1[which(rowMeans(is.na(lang1)) < 1),]
1:14
1:14+4
language = "yim"
features=1:14
	shifted.features = features+4
	data.subset = clean.data[clean.data$V1==language,shifted.features]
data.subset
	data.subset = remove.empty(data.subset)
get.feature = function(column,shift=F) {#
	if(shift) {#
		return(features[column-5,2])#
	}#
	return(features[column,2])#
}#
#
remove.empty = function(data.subset) {#
	# Remove empty columns#
	data.subset = data.subset[,which(colMeans(is.na(data.subset)) < 1)]#
#
	# Remove empty rows#
	data.subset = data.subset[which(rowMeans(is.na(data.subset)) < 1),]#
	#
	return(data.subset)#
}
	data.subset = remove.empty(data.subset)
data.subset
	data.subset = remove.empty(data.subset)
	colnames(data.subset) = get.feature(shifted.features)
features
features = read.table("features.csv",header=T,sep=",",stringsAsFactors=F)
	colnames(data.subset) = get.feature(shifted.features)
data.subset
get.feature(shifted.features)
colnames(data.subset)
length(colnames(data.subset))
shifted.features
length(shifted.features)
	data.subset = clean.data[clean.data$V1==language,shifted.features]
	colnames(data.subset) = get.feature(shifted.features)
	data.subset = remove.empty(data.subset)
data.subset
head(clean.data)
	rownames(data.subset) = clean.data$V4[clean.data$V1==language]
	data.subset = clean.data[clean.data$V1==language,shifted.features]
	rownames(data.subset) = clean.data$V4[clean.data$V1==language]
	colnames(data.subset) = get.feature(shifted.features)
data.subset
	heatmap(data.matrix(data.subset),Rowv=NA,Colv=NA)
	data.subset = remove.empty(data.subset)
	heatmap(data.matrix(data.subset),Rowv=NA,Colv=NA)
make.heatmap(clean.data,"yim",1:14)
?heatmap
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = clean.data[clean.data$V1==language,shifted.features]#
	rownames(data.subset) = clean.data$V4[clean.data$V1==language]#
	colnames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty(data.subset)#
	heatmap(data.matrix(data.subset),Rowv=NA,Colv=NA)#
}
make.heatmap(clean.data,"yim",1:14)
levels(clean.data$V1)
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = clean.data[clean.data$V1==language,shifted.features]#
	rownames(data.subset) = clean.data$V4[clean.data$V1==language]#
	colnames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty(data.subset)#
	heatmap(data.matrix(data.subset),Rowv=NA,Colv=NA,main=language)#
}
make.heatmap(clean.data,"ala",1:14)
pdf("data/ala.pdf")#
make.heatmap(clean.data,"ala",1:14)#
dev.off()#
#
pdf("data/arp.pdf")#
make.heatmap(clean.data,"arp",1:14)#
dev.off()#
#
pdf("data/awt.pdf")#
make.heatmap(clean.data,"awt",1:14)#
dev.off()#
#
pdf("data/kew.pdf")#
make.heatmap(clean.data,"kew",1:14)#
dev.off()#
#
pdf("data/kob.pdf")#
make.heatmap(clean.data,"kob",1:14)#
dev.off()#
#
pdf("data/yim.pdf")#
make.heatmap(clean.data,"yim",1:14)#
dev.off()
library(ggplot2)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = clean.data[clean.data$V1==language,shifted.features]#
	rownames(data.subset) = clean.data$V4[clean.data$V1==language]#
	colnames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty(data.subset)#
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)#
}
make.heatmap(clean.data,"ala",1:14)
remove.empty = function(data.subset) {#
	# Remove empty columns#
	data.subset = data.subset[,which(colMeans(is.na(data.subset)) < 1)]#
	# Remove empty rows#
	data.subset = data.subset[which(rowMeans(is.na(data.subset)) < 1),]#
	return(data.subset)#
}#
#
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = clean.data[clean.data$V1==language,shifted.features]#
	rownames(data.subset) = clean.data$V4[clean.data$V1==language]#
	colnames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty(data.subset)#
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap(clean.data,"arp",1:14)
make.heatmap(clean.data,"awt",1:14)
make.heatmap(clean.data,"kew",1:14)
make.heatmap(clean.data,"kob",1:14)
make.heatmap(clean.data,"yim",1:14)
shifted.features
language
	data.subset = clean.data[clean.data$V1==language,shifted.features]
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	data.subset = remove.empty(data.subset)
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
data.matrix(data.subset)
t(data.matrix(data.subset))
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
quartz();	heatmap(data.matrix(t(data.subset)),Rowv=NA,Colv=NA,main=language)
	data.subset = clean.data[clean.data$V1==language,shifted.features]
	data.subset = remove.empty(t(data.subset))
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	data.subset = remove.empty((data.subset))
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	data.subset = clean.data[clean.data$V1==language,shifted.features]
	data.subset = remove.empty((data.subset))
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
data.subset
t(data.subset)
t(data.matrix(data.subset))
(data.matrix(data.subset))
heatmap(data.matrix(data.subset))
	heatmap((data.matrix(data.subset)),main=language)
	heatmap(t(data.matrix(data.subset)),main=language)
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])
	rownames(data.subset) = clean.data$V4[clean.data$V1==language]
	colnames(data.subset) = get.feature(shifted.features)
	data.subset = remove.empty((data.subset))
	heatmap(t(data.matrix(data.subset)),main=language)
	colnames(data.subset) = clean.data$V4[clean.data$V1==language]
	rownames(data.subset) = get.feature(shifted.features)
	data.subset = clean.data[clean.data$V1==language,shifted.features]
data.subset
t(data.subset)
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])
data.subset
rownames(data.subset)
	rownames(data.subset) = get.feature(shifted.features)
	colnames(data.subset) = clean.data$V4[clean.data$V1==language]
data.subset
	data.subset = remove.empty((data.subset))
data.subset
	heatmap((data.matrix(data.subset)),main=language)
	heatmap(data.matrix(data.subset),Rowv=NA,Colv=NA,main=language)
data.subset
rowname(data.subset)
rownames(data.subset)
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
data.subset
t(data.subset)
	data.subset.m = melt(data.subset)
library(reshape)
	data.subset.m = melt(data.subset)
	data.subset.m = ddply(data.subset.m, .(variable), transform, rescale = rescale(value))
?ddply
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(4, 4, 2, 0.5))
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(5, 4, 4, 2)=0.1)
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(5, 4, 4, 2)+0.1)
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(10, 4, 4, 2)+0.1)
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(10, 4, 4, 2)+0.1)
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(15, 4, 4, 2)+0.1)
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(15, 4, 4, 2)+0.1)
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(5, 4, 4, 2)+0.1)
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(5, 4, 4, 2)+0.1)#
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(5, 4, 4, 2)+0.1,oma=c(5,2,2,2))
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(5, 4, 4, 2)+0.1,oma=c(15,2,2,2))
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(0, 4, 4, 2)+0.1,oma=c(15,2,2,2))
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(0, 4, 4, 2)+0.1,oma=c(2,2,2,2))
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
	par(mar=c(4, 4, 4, 2)+0.1,oma=c(2,2,2,2))
	par(oma=c(15,2,2,2))
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)
languages = read.table("languages.csv",header=T,sep=",",stringsAsFactors=F)
head(languages)
languages = read.table("languages.csv",header=T,sep="\t",quote="\"",stringsAsFactors=F)
head(languages)
feature.list = read.table("features.csv",header=T,sep=",",stringsAsFactors=F)
language.list = read.table("languages.csv",header=T,sep="\t",quote="\"",stringsAsFactors=F)
get.language = function(language) {#
	return(language.list[which(language.list[,1]==language),2])#
}
get.feature = function(column,shift=F) {#
	if(shift) {#
		return(feature.list[column-5,2])#
	}#
	return(feature.list[column,2])#
}
language
get.language(language)
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])
get.language(c("yim","ala"))
length(language)
get.language = function(language) {#
	names = rep(NA,length(language))#
	for(i in language) {#
		names[i] = language.list[which(language.list[,1]==language[i]),2]#
	}#
	return(names)#
}
get.language(c("yim","ala"))
rep(NA,length(c("yim","ala")))
language = c("yim","ala")
which(language.list[,1]==language[1])
which(language.list[,1]==language[2])
language.list[which(language.list[,1]==language[2]),2]
language.list[which(language.list[,1]==language[1]),2]
names = rep(NA,length(language))
names[1] = language.list[which(language.list[,1]==language[1]),2]
names[2] = language.list[which(language.list[,1]==language[2]),2]
names
get.language = function(language) {#
	names = rep(NA,length(language))#
	for(i in language) {#
		names[i] = language.list[which(language.list[,1]==language[i]),2]#
	}#
	return(names)#
}
get.language(c("yim","ala"))
get.language(language)
language
	names = rep(NA,length(language))
names
	for(i in language) {#
		names[i] = language.list[which(language.list[,1]==language[i]),2]#
	}
language.list[which(language.list[,1]==language[i]),2]
i = 1
get.language = function(language) {#
	names = rep(NA,length(language))#
	for(i in 1:length(language) {#
		names[i] = language.list[which(language.list[,1]==language[i]),2]#
	}#
	return(names)#
}
get.language = function(language) {#
	names = rep(NA,length(language))#
	for(i in 1:length(language) {#
		names[i] = language.list[which(language.list[,1]==language[i]),2]#
	}#
	return(names)#
}
get.language = function(language) {#
	names = rep(NA,length(language))#
	for(i in 1:length(language)) {#
		names[i] = language.list[which(language.list[,1]==language[i]),2]#
	}#
	return(names)#
}
get.language(language)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=language)#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap(clean.data,"arp",1:14)
pdf("data/ala.pdf")#
make.heatmap(clean.data,"ala",1:14)#
dev.off()#
#
pdf("data/arp.pdf")#
make.heatmap(clean.data,"arp",1:14)#
dev.off()#
#
pdf("data/awt.pdf")#
make.heatmap(clean.data,"awt",1:14)#
dev.off()#
#
pdf("data/kew.pdf")#
make.heatmap(clean.data,"kew",1:14)#
dev.off()#
#
pdf("data/kob.pdf")#
make.heatmap(clean.data,"kob",1:14)#
dev.off()#
#
pdf("data/yim.pdf")#
make.heatmap(clean.data,"yim",1:14)#
dev.off()
