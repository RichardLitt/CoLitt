lines(x, predict(yx.lm), col="red")#
lines(predict(xy.lm), y, col="blue")
pi
class(pi)
x = c(1:10)
barplot(x)
2^(1/12)
440*2(1^12)
440*2^(1^12)
440+2^(1^12)
440*(2^(1^12))
440*2^(1/12)
440*2^(1/12)*2^(1/12)*2^(1/12)
440*2^(1/12)*2^(1/12)*2^(1/12)*2^(1/12)*2^(1/12)*2^(1/12)*2^(1/12)*2^(1/12)*2^(1/12)*2^(1/12)*2^(1/12)*2^(1/12)
440*(2^(1/12)^1)
440*(2^(1/12)^12)
440*(2^(1/12)^3)
440*(()2^(1/12))^3)
440*((2^(1/12))^3)
440*((2^(1/12))^12)
log2(199)
log2(4)
log2(2)
log2()
log2(1)
log2(1000)
ls()
x = c(12,14,67,36)
barplot(x)
names(x)=c("hellohello","darling","woopwoopwoop","yodawg")
barplot(x)
barplot(x,cex.names=0.5)
barplot(x,las=1)
barplot(x,las=2)
barplot(hard.work)
data=data.frame(z=c(1,2,3))
data
boxplot(z~g,data=data)
eval()
?eval
?heatmap
x = rnorm(100)
x = matrix(x,nrow=10,ncol=10)
image(x)
heat.colors(x)
image(x,col=terrain.colors)
image(x,col=terrain.colors(x))
image(x,col=topo.colors(x))
image(x)
heatmap(x)
heatmap(x,colsidecolors=c("red","green"))
heatmap(x,ColSideColors=c("red","green"))
heatmap(x,ColSideColors=rep(c("red","green"),5))
heatmap(x,ColSideColors=c("red","green","yellow","blue","gray","lightblue","lightgreen","black","lightblue","lightred"))
heatmap(x,ColSideColors=c("red","green","yellow","blue","gray","lightblue","lightgreen","black","lightblue","darkred"))
heatmap(x)
heatmap(x,verbose=T)
x
x = matrix(c(1,1,2,3),nrow=2,ncol=2)
x
heatmap(x)
image(x)
x = matrix(c(0,0,2,3),nrow=2,ncol=2)
image(x)
x = matrix(c(0,0,0,3),nrow=2,ncol=2)
image(x)
x
heatmap(x)
x = matrix(c(5,0,5,3),nrow=2,ncol=2)
heatmap(x)
image(x)
library(reshape)
setwd("/Users/rory/Documents/Research/Git/CoLitt/LingViz/code")
clean.data = read.table("data/geo-clean-30-datapoints-r-500",sep=",",header=F)
feature.list = read.table("features.csv",header=T,sep=",",stringsAsFactors=F)#
language.list = read.table("languages.csv",header=T,sep="\t",quote="\"",stringsAsFactors=F)#
#
# Given a particular column in a dataset, find what#
# feature it corresponds to. Can also shift, if#
# the dataset still has the language and distance#
# columns attached.#
get.feature = function(column,shift=F) {#
	if(shift) {#
		return(feature.list[column-5,2])#
	}#
	return(feature.list[column,2])#
}#
#
# Given a particular language code, find the full#
# language name#
get.language = function(language) {#
	names = rep(NA,length(language))#
	for(i in 1:length(language)) {#
		names[i] = language.list[which(language.list[,1]==language[i]),2]#
	}#
	return(names)#
}
remove.empty = function(data.subset) {#
	# Remove empty columns#
	data.subset = data.subset[,which(colMeans(is.na(data.subset)) < 1)]#
	# Remove empty rows#
	data.subset = data.subset[which(rowMeans(is.na(data.subset)) < 1),]#
	return(data.subset)#
}
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
#	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
#	par(oma=c(15,2,2,2))#
#	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap(clean.data,"ala",1:14)
?image
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
#	image(data.matrix(data.subset))#
}
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
?heatmap
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
#	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
	heatmap(t(data.matrix(data.subset)),main=get.language(language))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap(t(data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(clean.data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(clean.data$V4[clean.data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),hclustfun=NULL)#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=rainbow(data.subset))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
rainbow(data.subset)
rainbow(500)
rainbow(12)
plot(1:12,col=rainbow(12))
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=rainbow(1:12))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=rainbow(12))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=topo.colors(12))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=terrain.colors(12))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12))#
#	image(data.matrix(data.subset))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
#	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12))#
	image(t(data.matrix(data.subset)))#
}
quartz()
make.heatmap(clean.data,"ala",1:14)
heatmap
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
#	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12))#
	heatmap((data.matrix(data.subset)),main=get.language(language),col=heat.colors(12))#
#
#	image(t(data.matrix(data.subset)))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
#	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12))#
	heatmap(t(data.matrix(data.subset)),main=get.language(language),col=heat.colors(12))#
#
#	image(t(data.matrix(data.subset)))#
}
make.heatmap(clean.data,"ala",1:14)
1L
L
1L
1L:5
di[2L]
dim(x)
x
dim(x)[1L]
dim(x)[2L]
dim(x)[2]
dim(x)[1]
data = clean.data
language = "ala"
features = 1:14
	shifted.features = features+4
	data.subset = t(data[clean.data$V1==language,shifted.features])
	colnames(data.subset) = get.language(data$V4[data$V1==language])
	rownames(data.subset) = get.feature(shifted.features)
	data.subset = remove.empty((data.subset))
data.subset
x = data.subset
Rowv = NA
Colv = NA
main = get.language(language)
distfun = dist
hclustfun = hclust
reorderfun = function(d, #
        w) reorder(d, w)
symm = FALSE
revC = identical(Colv, #
        "Rowv")
scale = c("row", "column", "none")
na.rm = TRUE
margins = c(5, 5)
cexRow = 0.2
cexRow = 0.2 + #
        1/log10(nr)
cexCol = 0.2 + 1/log10(nc)
labRow = NULL
labCol = NULL
main = NULL
xlab = NULL
ylab = NULL
keep.dendro = FALSE
verbose = getOption("verbose")
scale
match.arg(scale)
    scale <- if (symm && missing(scale)) #
        "none"#
    else match.arg(scale)
?match.arg
dim(x)
    nr <- di[1L]
di = dim(x)
    nr <- di[1L]
    nc <- di[2L]
cexCol = 0.2 + 1/log10(nc)
cexRow = 0.2 + #
        1/log10(nr)
nr
nc
di
@l
2L
class(1L)
1L==1
1R==1
1R
1L
1O
1K
1k
?"L"
?'L'
??L
    doRdend <- !identical(Rowv, NA)
doRdend
    doCdend <- !identical(Colv, NA)
    if (!doRdend && identical(Colv, "Rowv")) #
        doCdend <- FALSE
doCdend
Rowv
is.null(Rowv)
rowInd = 1L:nr
rowInd
colInd <- 1L:nc
colInd
dim(x)
    x <- x[rowInd, colInd]
labRow
rownames(x)
labRow = rownames(x)
labCol = colnames(x)
labCol
scale
?sweep
?heatmap
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
#	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12))#
	heatmap((data.matrix(data.subset)),main=get.language(language),col=heat.colors(12),scale="row")#
#
#	image(t(data.matrix(data.subset)))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
#	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12))#
	heatmap((data.matrix(data.subset)),main=get.language(language),col=heat.colors(12),scale="column")#
#
#	image(t(data.matrix(data.subset)))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(15,2,2,2))#
#	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12))#
	heatmap((data.matrix(data.subset)),main=get.language(language),col=heat.colors(12),scale="none")#
#
#	image(t(data.matrix(data.subset)))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap(clean.data,"ala",1:14)
make.heatmap(clean.data,"arp",1:14)
make.heatmap(clean.data,"awt",1:14)
make.heatmap(clean.data,"kew",1:14)
make.heatmap(clean.data,"kob",1:14)
make.heatmap(clean.data,"yim",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(2,2,2,2))#
#	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12))#
	heatmap((data.matrix(data.subset)),main=get.language(language),col=heat.colors(12),scale="none")#
#
#	image(t(data.matrix(data.subset)))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(3,15,2,2))#
#	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12))#
	heatmap((data.matrix(data.subset)),main=get.language(language),col=heat.colors(12),scale="none")#
#
#	image(t(data.matrix(data.subset)))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(3,2,2,15))#
#	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12))#
	heatmap((data.matrix(data.subset)),main=get.language(language),col=heat.colors(12),scale="none")#
#
#	image(t(data.matrix(data.subset)))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(3,2,2,15))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12),scale="none")#
#	heatmap((data.matrix(data.subset)),main=get.language(language),col=heat.colors(12),scale="none")#
#
#	image(t(data.matrix(data.subset)))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(2.5,2,2,15))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12),scale="none")#
#	heatmap((data.matrix(data.subset)),main=get.language(language),col=heat.colors(12),scale="none")#
#
#	image(t(data.matrix(data.subset)))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(2,2,2,15))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12),scale="none")#
#	heatmap((data.matrix(data.subset)),main=get.language(language),col=heat.colors(12),scale="none")#
#
#	image(t(data.matrix(data.subset)))#
}
make.heatmap(clean.data,"ala",1:14)
make.heatmap = function(data,language,features) {#
	shifted.features = features+4#
	data.subset = t(data[clean.data$V1==language,shifted.features])#
	colnames(data.subset) = get.language(data$V4[data$V1==language])#
	rownames(data.subset) = get.feature(shifted.features)#
	data.subset = remove.empty((data.subset))#
# Rescale the data#
#	data.subset.m = melt(data.subset)#
#	data.subset.m = ddply(data.subset.m, .(variable), transform, #rescale = rescale(value))#
	par(oma=c(2,2,2,10))#
	heatmap((data.matrix(data.subset)),Rowv=NA,Colv=NA,main=get.language(language),col=heat.colors(12),scale="none")#
#	heatmap((data.matrix(data.subset)),main=get.language(language),col=heat.colors(12),scale="none")#
#
#	image(t(data.matrix(data.subset)))#
}
make.heatmap(clean.data,"ala",1:14)
pdf("data/ala.pdf")#
make.heatmap(clean.data,"ala",1:14)#
dev.off()#
#
pdf("data/arp.pdf")#
make.heatmap(clean.data,"arp",1:14)#
dev.off()#
#
pdf("data/awt.pdf")#
make.heatmap(clean.data,"awt",1:14)#
dev.off()#
#
pdf("data/kew.pdf")#
make.heatmap(clean.data,"kew",1:14)#
dev.off()#
#
pdf("data/kob.pdf")#
make.heatmap(clean.data,"kob",1:14)#
dev.off()#
#
pdf("data/yim.pdf")#
make.heatmap(clean.data,"yim",1:14)#
dev.off()
