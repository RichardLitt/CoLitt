tables(colnames(data.subset))
table(colnames(data.subset))
table(geo_data$V1)
table(geo_data$V2)
table(geo_data$V3)
table(geo_data$V4)
table(geo_data$V5)
table(geo_data$V6)
table(geo_data$V7)
table(geo_data$V8)
table(geo_data$V9)
table(geo_data$V10)
table(geo_data$V11)
head(geo_data)
geo_data[geo_dat$V10=="yim"]
geo_data[geo_data$V10=="yim"]
geo_data[geo_data$V10=="yim",]
head(intersect(data.subset,data.subset))
class(intersect(data.subset,data.subset))
unique(data.subset)
dim(data.subset)
dim(unique(data.subset))
dim(t(unique(t(data.subset))))
heatmap(data.subset)
data.subset = t(unique(t(data.subset)))
heatmap(data.subset)
heatmap(data.matrix(data.subset))
heatmap(data.subset,Rowv=NA,Colv=NA)
heatmap(data.subset,Rowv=NA,Colv=NA,scale="none")
quartz()
heatmap(data.subset,Rowv=NA,Colv=NA)
heatmap(data.subset,Rowv=NA,Colv=NA,scale="none")
heatmap(data.subset,Rowv=NA,Colv=NA)
names(data.subset)
colnames(data.subset)
colnames(data.subset[,c(21:1)])
table(geo_data$V8)
head(geo_data[,1:10])
(geo_data[1:10,1:10])
(geo_data[geo_data$V10=="ham",1:10])
heatmap(data.subset,Rowv=NA,Colv=NA,main="TITLE HERE")
par(oma=c(2,2,2,10))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(2,10,2,10))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(2,2,10,10))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(210,2,2,10))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(10,2,2,10))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(7,2,2,10))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(5,2,2,10))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(4,2,2,10))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(2,2,2,10))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(2,2,2,8))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(2,2,2,12))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(2,2,2,13))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(2,2,2,15))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(2,2,2,20))
heatmap(data.subset,Rowv=NA,Colv=NA)
rownames(data.subset)
legend("topright",c("hello","jack"))
legend("topright",get.feature(names(best.features),shift=10))
pdf("data_new/graph2.pdf")#
par(oma=c(2,2,2,20))#
heatmap(data.subset,Rowv=NA,Colv=NA)#
dev.off()
pdf("graphs/graph2.pdf")#
par(oma=c(2,2,2,20))#
heatmap(data.subset,Rowv=NA,Colv=NA)#
dev.off()
colnames(data.subset) = paste("F",best.features,sep="")
paste("F",best.features,sep="")
paste("F",names(best.features),sep="")
colnames(data.subset) = paste("F",names(best.features),sep=""))
colnames(data.subset) = paste("F",names(best.features),sep="")
rownames(data.subset) = paste("F",names(best.features),sep="")
par(oma=c(2,2,2,20))
heatmap(data.subset,Rowv=NA,Colv=NA)
par(oma=c(2,2,2,2))
heatmap(data.subset,Rowv=NA,Colv=NA)
rownames(data.subset) = paste("F",names(best.features),sep="")#
pdf("graphs/graph2wnumbers.pdf")#
par(oma=c(2,2,2,2))#
heatmap(data.subset,Rowv=NA,Colv=NA)#
dev.off()
geo_yim = read.table("data_new/geo-yim",sep=",",quote="\"")
require(maps)
yimx = geo_yim$V8[which(geo_yim$V1=="yim")]
yimy = geo_yim$V7[which(geo_yim$V1=="yim")]
plot(geo_yim$V8,geo_yim$V7,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")
head(geo_yim)
geo_yim = read.table("data_new/geo-yim",sep=",",quote="\"",header=T)
plot(geo_yim$V8,geo_yim$V7,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")
head(geo_yim)
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")
color_scaling = geo_yim$percentage.filled*255/max(geo_yim$V5)
mean(geo_yim$percentage.filled)
color_scaling = geo_yim$percentage.filled*255/max(geo_yim$percentage.filled)
families = c("Trans-New Guinea","Austronesian","Sepik","Torricelli","Other")
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")#
#
color_scaling = geo_yim$percentage.filled*255/max(geo_yim$percentage.filled)#
#
families = c("Trans-New Guinea","Austronesian","Sepik","Torricelli","Other")#
#
geo_tg = geo_yim[geo_yim$genus==families[1],]#
geo_au = geo_yim[geo_yim$genus==families[2],]#
geo_sp = geo_yim[geo_yim$genus==families[3],]#
geo_tr = geo_yim[geo_yim$genus==families[4],]#
geo_ot = geo_yim[geo_yim$genus!=families[1] & geo_yim$genus!=families[2] & geo_yim$genus!=families[3] & geo_yim$genus!=families[4],]#
#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,color_scaling,maxColorValue=255),pch=14)#
#
points(yimx,yimy,pch=11)#
#
# Add an overlay of the landmass, although it doesn't#
# quite line up :(#
3map("world","papua new guinea",add=TRUE)#
#map("world","indonesia",add=TRUE)#
#
legend("topright",pch=c(15,16,17,18,14,11),c("Trans-New Guinea","Austronesian","Sepik","Torricelli","Other","Yimas"))
summary(geo_yim$percentage.filled)
hist(geo_yim$percentage.filled)
boxplot(geo_yim$percentage.filled)
hist(geo_yim$percentage.filled)
length(geo_yim$percentage.filled>0.5)
length(geo_yim$percentage.filled)
sum(geo_yim$percentage.filled>0.5)
sum(geo_yim$percentage.filled<0.5)
sum(geo_yim$percentage.filled<0.25)
sum(geo_yim$percentage.filled<0.05)
summary(geo_yim$percentage.filled*255/max(geo_yim$percentage.filled))
255/2
color_scaling = sapply(geo_yim$percentage.filled,function(x) if(x => 0.5) { 255*1 } else if(x => 0.25) { 255*0.75 } else if (x => 0.1 ) { 255*0.5 } else { 255*0.25 } )
5 >= 4
5 => 4
color_scaling = sapply(geo_yim$percentage.filled,function(x) if(x >= 0.5) { 255*1 } else if(x >= 0.25) { 255*0.75 } else if (x >= 0.1 ) { 255*0.5 } else { 255*0.25 } )
head(color_scaling)
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,color_scaling,maxColorValue=255),pch=14)
length(color_scaling)
dim(geo_tg)
geo_yim$color_scaling = sapply(geo_yim$percentage.filled,function(x) if(x >= 0.5) { 255*1 } else if(x >= 0.25) { 255*0.75 } else if (x >= 0.1 ) { 255*0.5 } else { 255*0.25 } )
geo_tg = geo_yim[geo_yim$genus==families[1],]#
geo_au = geo_yim[geo_yim$genus==families[2],]#
geo_sp = geo_yim[geo_yim$genus==families[3],]#
geo_tr = geo_yim[geo_yim$genus==families[4],]#
geo_ot = geo_yim[geo_yim$genus!=families[1] & geo_yim$genus!=families[2] & geo_yim$genus!=families[3] & geo_yim$genus!=families[4],]
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)
legend("topright",pch=c(15,16,17,18,14,11),c("Trans-New Guinea","Austronesian","Sepik","Torricelli","Other","Yimas"))
legend("topright",pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")
grap = plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")
graph
grap
legend("topright",inset=c(2,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))
legend("topright",inset=c(0,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))
legend("topright",inset=c(-2,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)
legend("topright",inset=c(-2,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))
legend("topright",inset=c(0.5,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))
legend("topright",inset=c(0.001,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))
legend("topright",inset=c(0.01,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))
legend("topright",inset=c(0.1,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)
legend("topright",inset=c(0.1,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))
legend("topright",inset=c(0,0),pch=16,c("50%+","25%+","10%+","0%+"))
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))
legend("topright",inset=c(0,0),pch=16,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255))
legend("topright",inset=c(0,0.15),pch=16,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255))
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)#
#
points(yimx,yimy,pch=11)#
#
# Add an overlay of the landmass, although it doesn't#
# quite line up :(#
#map("world","papua new guinea",add=TRUE)#
#map("world","indonesia",add=TRUE)#
#
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))#
legend("topright",inset=c(0,0.15),pch=16,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255))#
dev.off()
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)#
#
points(yimx,yimy,pch=11)#
#
# Add an overlay of the landmass, although it doesn't#
# quite line up :(#
#map("world","papua new guinea",add=TRUE)#
#map("world","indonesia",add=TRUE)#
#
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))#
legend("topright",inset=c(0,0.15),pch=16,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255))
yimx
yimy
plot(yimx,yimy)
head(geo_yim)
yimx = geo_yim$coordinate.2[which(geo_yim$wals.code=="yim")]#
yimy = geo_yim$coordinate.1[which(geo_yim$wals.code=="yim")]
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n",main="TITLE HERE")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)#
#
points(yimx,yimy,pch=11)#
#
# Add an overlay of the landmass, although it doesn't#
# quite line up :(#
#map("world","papua new guinea",add=TRUE)#
#map("world","indonesia",add=TRUE)#
#
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,14,11),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other","Yimas"))#
legend("topright",inset=c(0,0.15),pch=16,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255))
symbols(yimx,yimy,circles)
?symbols
symbols(yimx,yimy,circles=1)
symbols(yimx,yimy,circles=1,add=T)
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)#
#
#points(yimx,yimy,pch=11)#
symbols(yimx,yimy,circles=1,add=T)
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)#
#
#points(yimx,yimy,pch=11)#
symbols(yimx,yimy,circles=0.1,add=T)
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)#
#
#points(yimx,yimy,pch=11)#
symbols(yimx,yimy,circles=0.5,add=T)
symbols(yimx,yimy,circles=2,add=T)
symbols(yimx,yimy,circles=2,add=T,inches=F)
symbols(yimx,yimy,circles=0.5,add=T,inches=F)
symbols(yimx,yimy,circles=0.2,add=T,inches=F)
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)#
#
#points(yimx,yimy,pch=11)#
symbols(yimx,yimy,circles=0.2,add=T,inches=F)#
#
# Add an overlay of the landmass, although it doesn't#
# quite line up :(#
#map("world","papua new guinea",add=TRUE)#
#map("world","indonesia",add=TRUE)#
#
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,14),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other"))#
legend("topright",inset=c(0,0.15),pch=16,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255))
yimx
yimy
# Calculates the geodesic distance between two points specified by radian latitude/longitude using#
# Vincenty inverse formula for ellipsoids (vif)#
gcd.vif = function(long1, lat1, long2, lat2) {#
#
  # WGS-84 ellipsoid parameters#
  a = 6378137         # length of major axis of the ellipsoid (radius at equator)#
  b = 6356752.314245  # ength of minor axis of the ellipsoid (radius at the poles)#
  f = 1/298.257223563 # flattening of the ellipsoid#
#
  L = long2-long1 # difference in longitude#
  U1 = atan((1-f) * tan(lat1)) # reduced latitude#
  U2 = atan((1-f) * tan(lat2)) # reduced latitude#
  sinU1 = sin(U1)#
  cosU1 = cos(U1)#
  sinU2 = sin(U2)#
  cosU2 = cos(U2)#
#
  cosSqAlpha = NULL#
  sinSigma = NULL#
  cosSigma = NULL#
  cos2SigmaM = NULL#
  sigma = NULL#
#
  lambda = L#
  lambdaP = 0#
  iterLimit = 100#
  while (abs(lambda-lambdaP) > 1e-12 & iterLimit>0) {#
    sinLambda = sin(lambda)#
    cosLambda = cos(lambda)#
    sinSigma = sqrt( (cosU2*sinLambda) * (cosU2*sinLambda) +#
                      (cosU1*sinU2-sinU1*cosU2*cosLambda) * (cosU1*sinU2-sinU1*cosU2*cosLambda) )#
    if (sinSigma==0) return(0)  # Co-incident points#
    cosSigma = sinU1*sinU2 + cosU1*cosU2*cosLambda#
    sigma = atan2(sinSigma, cosSigma)#
    sinAlpha = cosU1 * cosU2 * sinLambda / sinSigma#
    cosSqAlpha = 1 - sinAlpha*sinAlpha#
    cos2SigmaM = cosSigma - 2*sinU1*sinU2/cosSqAlpha#
    if (is.na(cos2SigmaM)) cos2SigmaM = 0  # Equatorial line: cosSqAlpha=0#
    C = f/16*cosSqAlpha*(4+f*(4-3*cosSqAlpha))#
    lambdaP = lambda#
    lambda = L + (1-C) * f * sinAlpha *#
              (sigma + C*sinSigma*(cos2SigmaM+C*cosSigma*(-1+2*cos2SigmaM*cos2SigmaM)))#
    iterLimit = iterLimit - 1#
  }#
  if (iterLimit==0) return(NA)  # formula failed to converge#
  uSq = cosSqAlpha * (a*a - b*b) / (b*b)#
  A = 1 + uSq/16384*(4096+uSq*(-768+uSq*(320-175*uSq)))#
  B = uSq/1024 * (256+uSq*(-128+uSq*(74-47*uSq)))#
  deltaSigma = B*sinSigma*(cos2SigmaM+B/4*(cosSigma*(-1+2*cos2SigmaM^2) -#
                                      B/6*cos2SigmaM*(-3+4*sinSigma^2)*(-3+4*cos2SigmaM^2)))#
  s = b*A*(sigma-deltaSigma) / 1000#
  if(length(s)==0) {#
  	s = 0#
  }#
#
  return(s) # Distance in km#
}
yimy
yimx
deg2rad = function(deg) {#
	return(deg*pi/180)#
}
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy),deg2rad(yimx+2))
()deg2rad(yimx+2))
deg2rad(yimx+2))
deg2rad(yimx+2)
gcd.vif(100,200,100,201)
gcd.vif(100,203,100,201)
gcd.vif(1,2,1,3)
gcd.vif(1,3,1,3)
gcd.vif(1,1,2,3)
gcd.vif(yimx+0.3)
yimx+0.3
yimx+0.2
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+0.2),deg2rad(yimx+0.2))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+2),deg2rad(yimx+2))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+3),deg2rad(yimx+3))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+4),deg2rad(yimx+4))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+3.4),deg2rad(yimx+3.4))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+3.5),deg2rad(yimx+3.5))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+3.49),deg2rad(yimx+3.49))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+3.45),deg2rad(yimx+3.45))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+3.47),deg2rad(yimx+3.47))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+3.48),deg2rad(yimx+3.48))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+3.475),deg2rad(yimx+3.475))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+3.475),deg2rad(yimx+3.475))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+3.475),deg2rad(yimx+3.476))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+3.476),deg2rad(yimx+3.476))
gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy-3.476),deg2rad(yimx-3.476))
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)#
#
#points(yimx,yimy,pch=11)#
symbols(yimx,yimy,circles=3.476,add=T,inches=F)#
#
# Add an overlay of the landmass, although it doesn't#
# quite line up :(#
#map("world","papua new guinea",add=TRUE)#
#map("world","indonesia",add=TRUE)#
#
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,14),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other"))#
legend("topright",inset=c(0,0.15),pch=16,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255))#
dev.off()
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=14)#
#
#points(yimx,yimy,pch=11)#
symbols(yimx,yimy,circles=3.476,add=T,inches=F)#
#
# Add an overlay of the landmass, although it doesn't#
# quite line up :(#
#map("world","papua new guinea",add=TRUE)#
#map("world","indonesia",add=TRUE)#
#
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,14),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other"))#
legend("topright",inset=c(0,0.15),pch=16,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255))
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=7)#
#
#points(yimx,yimy,pch=11)#
symbols(yimx,yimy,circles=3.476,add=T,inches=F)#
#
# Add an overlay of the landmass, although it doesn't#
# quite line up :(#
#map("world","papua new guinea",add=TRUE)#
#map("world","indonesia",add=TRUE)#
#
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,7),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other"))#
legend("topright",inset=c(0,0.15),pch=15,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255))
legend("topright",inset=c(0,0.15),pch=15,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255),bg="red")
legend("topright",inset=c(0,0.15),pch=15,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255),bg="white")
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,7),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other"),bg="white")
symbols(yimx,yimy,circles=3.476,lty=2,add=T,inches=F)
gcd.vif(deg2rad(yimy-3.475),deg2rad(yimx-3.475),deg2rad(yimy+3.475),deg2rad(yimx+3.475))
z = 3.475
z=3.475; gcd.vif(deg2rad(yimy-z),deg2rad(yimx-z),deg2rad(yimy+z),deg2rad(yimx+z))
z=3.48; gcd.vif(deg2rad(yimy-z),deg2rad(yimx-z),deg2rad(yimy+z),deg2rad(yimx+z))
z=3.49; gcd.vif(deg2rad(yimy-z),deg2rad(yimx-z),deg2rad(yimy+z),deg2rad(yimx+z))
z=3.5; gcd.vif(deg2rad(yimy-z),deg2rad(yimx-z),deg2rad(yimy+z),deg2rad(yimx+z))
z=3.5; gcd.vif(deg2rad(yimy+z),deg2rad(yimx-z),deg2rad(yimy-z),deg2rad(yimx+z))
z=3.6; gcd.vif(deg2rad(yimy+z),deg2rad(yimx-z),deg2rad(yimy-z),deg2rad(yimx+z))
z=3.55; gcd.vif(deg2rad(yimy+z),deg2rad(yimx-z),deg2rad(yimy-z),deg2rad(yimx+z))
z=3.51; gcd.vif(deg2rad(yimy+z),deg2rad(yimx-z),deg2rad(yimy-z),deg2rad(yimx+z))
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=7)#
#
#points(yimx,yimy,pch=11)#
symbols(yimx,yimy,circles=3.51,lty=2,add=T,inches=F)#
#
# Add an overlay of the landmass, although it doesn't#
# quite line up :(#
#map("world","papua new guinea",add=TRUE)#
#map("world","indonesia",add=TRUE)#
#
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,7),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other"),bg="white")#
legend("topright",inset=c(0,0.15),pch=15,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255),bg="white")
z=3.51; gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy+z),deg2rad(yimx+z))
z=3.51; gcd.vif(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy-z),deg2rad(yimx-z))
head(geo_data)
head(geo_yim)
summary(distance.from.center.point)
summary(geo_yim$distance.from.center.point)
which.max(geo_yim$coordinate.1)
geo_yim[which.max(geo_yim$coordinate.1),]
geo_yim[161,]
geo_yim$coordinate.1[161]
geo_yim$coordinate.2[161]
z=3.51; gcd.hf(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy-z),deg2rad(yimx-z))
# Calculates the geodesic distance between two points specified by radian latitude/longitude using the#
# Haversine formula (hf)#
gcd.hf <- function(long1, lat1, long2, lat2) {#
  R <- 6371 # Earth mean radius [km]#
  delta.long <- (long2 - long1)#
  delta.lat <- (lat2 - lat1)#
  a <- sin(delta.lat/2)^2 + cos(lat1) * cos(lat2) * sin(delta.long/2)^2#
  c <- 2 * asin(min(1,sqrt(a)))#
  d = R * c#
  return(d) # Distance in km#
}
z=3.51; gcd.hf(deg2rad(yimy),deg2rad(yimx),deg2rad(yimy-z),deg2rad(yimx-z))
z=3.51; gcd.hf(deg2rad(yimy+z),deg2rad(yimx+z),deg2rad(yimy-z),deg2rad(yimx-z))
gcd.hf(geo_yim$coordinate.1[161],geo_yim$coordinate.2[161],yimy,yimx)
gcd.vif(geo_yim$coordinate.1[161],geo_yim$coordinate.2[161],yimy,yimx)
gcd.vif(deg2rad(geo_yim$coordinate.1[161]),deg2rad(geo_yim$coordinate.2[161]),deg2rad(yimy,yimx))
gcd.vif(deg2rad(geo_yim$coordinate.1[161]),deg2rad(geo_yim$coordinate.2[161]),deg2rad(yimy),deg2rad(yimx))
gcd.hf(deg2rad(geo_yim$coordinate.1[161]),deg2rad(geo_yim$coordinate.2[161]),deg2rad(yimy),deg2rad(yimx))
z
3.51^2+3.51^2
sqrt(3.51^2+3.51^2)
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=7)#
#
#points(yimx,yimy,pch=11)#
symbols(yimx,yimy,circles=4.96,lty=2,add=T,inches=F)#
#
# Add an overlay of the landmass, although it doesn't#
# quite line up :(#
#map("world","papua new guinea",add=TRUE)#
#map("world","indonesia",add=TRUE)#
#
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,7),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other"),bg="white")#
legend("topright",inset=c(0,0.15),pch=15,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255),bg="white")
require(maps)#
#
geo_yim = read.table("data_new/geo-yim",sep=",",quote="\"",header=T)#
#
geo_yim$color_scaling = sapply(geo_yim$percentage.filled,function(x) if(x >= 0.5) { 255*1 } else if(x >= 0.25) { 255*0.75 } else if (x >= 0.1 ) { 255*0.5 } else { 255*0.25 } )#
#
families = c("Trans-New Guinea","Austronesian","Sepik","Torricelli","Other")#
#
geo_tg = geo_yim[geo_yim$genus==families[1],]#
geo_au = geo_yim[geo_yim$genus==families[2],]#
geo_sp = geo_yim[geo_yim$genus==families[3],]#
geo_tr = geo_yim[geo_yim$genus==families[4],]#
geo_ot = geo_yim[geo_yim$genus!=families[1] & geo_yim$genus!=families[2] & geo_yim$genus!=families[3] & geo_yim$genus!=families[4],]#
#
#
# Columns coordinates 1 and 2 are long and lat respectively#
yimx = geo_yim$coordinate.2[which(geo_yim$wals.code=="yim")]#
yimy = geo_yim$coordinate.1[which(geo_yim$wals.code=="yim")]#
#
#
pdf("graphs/graph1.pdf")#
#
plot(geo_yim$coordinate.2,geo_yim$coordinate.1,xlab="Latitude",ylab="Longitude",type="n")#
#
points(geo_tg$coordinate.2,geo_tg$coordinate.1,col=rgb(0,0,0,geo_tg$color_scaling,maxColorValue=255),pch=15)#
points(geo_au$coordinate.2,geo_au$coordinate.1,col=rgb(0,0,0,geo_au$color_scaling,maxColorValue=255),pch=16)#
points(geo_sp$coordinate.2,geo_sp$coordinate.1,col=rgb(0,0,0,geo_sp$color_scaling,maxColorValue=255),pch=17)#
points(geo_tr$coordinate.2,geo_tr$coordinate.1,col=rgb(0,0,0,geo_tr$color_scaling,maxColorValue=255),pch=18)#
points(geo_ot$coordinate.2,geo_ot$coordinate.1,col=rgb(0,0,0,geo_ot$color_scaling,maxColorValue=255),pch=7)#
#
# Add a circle of approximately 500km radius#
symbols(yimx,yimy,circles=4.96,lty=2,add=T,inches=F)#
#
# Add an overlay of the landmass, although it doesn't#
# quite line up :(#
#map("world","papua new guinea",add=TRUE)#
#map("world","indonesia",add=TRUE)#
#
legend("topright",inset=c(0.15,0),pch=c(15,16,17,18,7),c("Trans-NNG","Austronesian","Sepik","Torricelli","Other"),bg="white")#
legend("topright",inset=c(0,0.15),pch=15,c("50%+","25%+","10%+","0%+"),col=rgb(0,0,0,c(255,255*0.75,255*0.5,255*0.25),maxColorValue=255),bg="white")#
#
dev.off()
